/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package gui.DropShipping;

import Data.DB_Access;
import gui.EmpMng.Home;
import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;



/**
 *
 * @author Disala Reyhart
 */
public class ManageShippingCost extends javax.swing.JFrame {

    /**
     * Creates new form ManageShippingCost
     */
    public ManageShippingCost() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton_home = new javax.swing.JButton();
        jButton_back = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jButton4 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbl_shippingcosts = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        btn_del = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        cmboBox_DCountry = new javax.swing.JComboBox();
        txt_SCost = new javax.swing.JTextField();
        btn_Back = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1290, 700));
        setPreferredSize(new java.awt.Dimension(1300, 700));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(null);

        jButton_home.setBackground(new java.awt.Color(0, 153, 204));
        jButton_home.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/home1.png"))); // NOI18N
        jButton_home.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton_home.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_homeActionPerformed(evt);
            }
        });
        getContentPane().add(jButton_home);
        jButton_home.setBounds(1210, 640, 63, 35);

        jButton_back.setBackground(new java.awt.Color(0, 153, 204));
        jButton_back.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/back.png"))); // NOI18N
        jButton_back.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton_back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_backActionPerformed(evt);
            }
        });
        getContentPane().add(jButton_back);
        jButton_back.setBounds(1140, 640, 61, 33);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder("Calculate Shipping Cost")));
        jPanel1.setLayout(null);

        jButton4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton4.setText("Edit Cost");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        tbl_shippingcosts.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Importing Country", "Destination Country", "Shipping Cost (USD)"
            }
        ));
        jScrollPane2.setViewportView(tbl_shippingcosts);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 852, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4))
                .addGap(20, 20, 20))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(31, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(189, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel2);
        jPanel2.setBounds(45, 91, 1000, 411);

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton1.setText("Add new country");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(680, 30, 130, 38);

        btn_del.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btn_del.setText("Delete Country");
        btn_del.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_delActionPerformed(evt);
            }
        });
        jPanel1.add(btn_del);
        btn_del.setBounds(810, 30, 120, 38);

        jLabel4.setText("Importing Country");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(77, 47, 82, 13);

        jLabel5.setText("Destination Country");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(231, 47, 89, 13);

        jLabel6.setText("Cost USD");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(536, 47, 42, 13);

        cmboBox_DCountry.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Afghanistan", "Albania", "Algeria", "Andorra", "Angola", "Antigua & Deps", "Argentina", "Armenia", "Australia", "Austria", "Azerbaijan", "Bahamas", "Bahrain", "Bangladesh", "Barbados", "Belarus", "Belgium", "Belize", "Benin", "Bhutan", "Bolivia", "Bosnia Herzegovina", "Botswana", "Brazil", "Brunei", "Bulgaria", "Burkina", "Burundi", "Cambodia", "Cameroon", "Canada", "Cape Verde", "Central African Rep", "Chad", "Chile", "China", "Colombia", "Comoros", "Congo", "Congo {Democratic Rep}", "Costa Rica", "Croatia", "Cuba", "Cyprus", "Czech Republic", "Denmark", "Djibouti", "Dominica", "Dominican Republic", "East Timor", "Ecuador", "Egypt", "El Salvador", "Equatorial Guinea", "Eritrea", "Estonia", "Ethiopia", "Fiji", "Finland", "France", "Gabon", "Gambia", "Georgia", "Germany", "Ghana", "Greece", "Grenada", "Guatemala", "Guinea", "Guinea-Bissau", "Guyana", "Haiti", "Honduras", "Hungary", "Iceland", "India", "Indonesia", "Iran", "Iraq", "Ireland {Republic}", "Israel", "Italy", "Ivory Coast", "Jamaica", "Japan", "Jordan", "Kazakhstan", "Kenya", "Kiribati", "Korea North", "Korea South", "Kosovo", "Kuwait", "Kyrgyzstan", "Laos", "Latvia", "Lebanon", "Lesotho", "Liberia", "Libya", "Liechtenstein", "Lithuania", "Luxembourg", "Macedonia", "Madagascar", "Malawi", "Malaysia", "Maldives", "Mali", "Malta", "Marshall Islands", "Mauritania", "Mauritius", "Mexico", "Micronesia", "Moldova", "Monaco", "Mongolia", "Montenegro", "Morocco", "Mozambique", "Myanmar, {Burma}", "Namibia", "Nauru", "Nepal", "Netherlands", "New Zealand", "Nicaragua", "Niger", "Nigeria", "Norway", "Oman", "Pakistan", "Palau", "Panama", "Papua New Guinea", "Paraguay", "Peru", "Philippines", "Poland", "Portugal", "Qatar", "Romania", "Russian Federation", "Rwanda", "St Kitts & Nevis", "St Lucia", "Saint Vincent & the Grenadines", "Samoa", "San Marino", "Sao Tome & Principe", "Saudi Arabia", "Senegal", "Serbia", "Seychelles", "Sierra Leone", "Singapore", "Slovakia", "Slovenia", "Solomon Islands", "Somalia", "South Africa", "South Sudan", "Spain", "Sri Lanka", "Sudan", "Suriname", "Swaziland", "Sweden", "Switzerland", "Syria", "Taiwan", "Tajikistan", "Tanzania", "Thailand", "Togo", "Tonga", "Trinidad & Tobago", "Tunisia", "Turkey", "Turkmenistan", "Tuvalu", "Uganda", "Ukraine", "United Arab Emirates", "United Kingdom", "United States", "Uruguay", "Uzbekistan", "Vanuatu", "Vatican City", "Venezuela", "Vietnam", "Yemen", "Zambia", "Zimbabwe" }));
        jPanel1.add(cmboBox_DCountry);
        cmboBox_DCountry.setBounds(345, 44, 167, 19);
        jPanel1.add(txt_SCost);
        txt_SCost.setBounds(591, 44, 74, 19);

        btn_Back.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btn_Back.setText("Back");
        btn_Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_BackActionPerformed(evt);
            }
        });
        jPanel1.add(btn_Back);
        btn_Back.setBounds(930, 30, 110, 38);

        jTextField1.setEditable(false);
        jTextField1.setBackground(new java.awt.Color(204, 204, 204));
        jTextField1.setText("China");
        jPanel1.add(jTextField1);
        jTextField1.setBounds(169, 44, 52, 19);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 230, 1100, 398);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/a (2).png"))); // NOI18N
        getContentPane().add(jLabel1);
        jLabel1.setBounds(40, 0, 1300, 150);

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/background.jpg"))); // NOI18N
        jLabel2.setText("jLabel2");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(0, 0, 1320, 160);

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/background.jpg"))); // NOI18N
        getContentPane().add(jLabel3);
        jLabel3.setBounds(1120, 160, 180, 540);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        DB_Access dba=new DB_Access();
        
        
        /*if(ID.isEmpty()||oDate.isEmpty()||edDate.isEmpty()||sTotal.isEmpty()||Total.isEmpty()){
            System.out.println("Please Input Values");
        }
      */
        try {
            double cost=Double.parseDouble(txt_SCost.getText());
        String quary="INSERT INTO `dropshipping`.`shippingcosts` (`ImportingCountry`, `DestinationCountry`, `Cost`) VALUES ('China', '"+cmboBox_DCountry.getSelectedItem().toString()+"', "+cost+");";       
            
            dba.setData(quary);
            refreshTable();
        }catch(NumberFormatException e){
            JOptionPane.showMessageDialog(this,"Please Enter Valid Shipping Cost !");
             
        }catch (SQLException ex) {
            System.out.println(ex.getMessage());
            if(ex.getErrorCode()==1062){ //exception for primary key duplicate
                JOptionPane.showMessageDialog(this,"Country Alredy Exist in The Database Please Edit By selecting Country in table");
            }
        }
        
        
        
       
       
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
       
        try {
            
            
            int selected= tbl_shippingcosts.getSelectedRow();
            
            //Checking Whether User selected table row or not
             if(selected<0){
                 //if there is no selected item in table show error message and exit from try block
                 JOptionPane.showMessageDialog(this, "Please Select Row Before Editing ");
                return;

        
              }
        
            String SelectedCountry = tbl_shippingcosts.getValueAt(selected,1).toString();
            System.out.println(SelectedCountry);
            
            
            double Val=Double.parseDouble(JOptionPane.showInputDialog(this,"Enter New Cost"));
            System.out.println(Val);
    
        
        
        
            DB_Access dba=new DB_Access();


            String quary="UPDATE `dropshipping`.`shippingcosts` SET `Cost`="+Val+" WHERE `DestinationCountry`='"+SelectedCountry+"';";       
           

                dba.setData(quary);
                refreshTable();
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }catch(NumberFormatException ex1){
        
            JOptionPane.showMessageDialog(this, "Please Enter Valid Value For Shipping Cost ");
        }
        
        
    }//GEN-LAST:event_jButton4ActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        refreshTable();
    }//GEN-LAST:event_formWindowOpened

    private void btn_delActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_delActionPerformed
        // TODO add your handling code here:
        try {
            
            
            int selected= tbl_shippingcosts.getSelectedRow();
            
            //Checking Whether User selected table row or not
             if(selected<0){
                 //if there is no selected item in table show error message and exit from try block
                 JOptionPane.showMessageDialog(this, "Please Select Row Before Deleting ");
                return;

        
              }
             
             //asking again before deleting value 
                int confirm=JOptionPane.showConfirmDialog(rootPane, "Are you sure ?");
                if(confirm==1 ||confirm==2){
                    return;
                }
                
                
            
            //end asking
             
             
        
            String SelectedCountry = tbl_shippingcosts.getValueAt(selected,1).toString();
            System.out.println(SelectedCountry);
 
        
            DB_Access dba=new DB_Access();


            String quary="DELETE FROM `dropshipping`.`shippingcosts` WHERE `DestinationCountry`='"+SelectedCountry+"'";       
           

                dba.setData(quary);
                refreshTable();
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }
    }//GEN-LAST:event_btn_delActionPerformed

    private void btn_BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_BackActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btn_BackActionPerformed

    private void jButton_homeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_homeActionPerformed
    this.dispose();
        //new Charge().setVisible(true);
        new Home().setVisible(true);
    }//GEN-LAST:event_jButton_homeActionPerformed

    private void jButton_backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_backActionPerformed
        this.dispose();
        new Dropshipping().setVisible(true);
    }//GEN-LAST:event_jButton_backActionPerformed
    public void refreshTable(){
        
        // create connection to databse
            DB_Access db=new DB_Access();
            //create table model for our table
            DefaultTableModel model = (DefaultTableModel) tbl_shippingcosts.getModel();
    model.setRowCount(0);
            //create quary 
            String quary="SELECT ImportingCountry,DestinationCountry,Cost FROM dropshipping.shippingcosts";
        try {
            DefaultTableModel dt=(DefaultTableModel) tbl_shippingcosts.getModel();            //Create result set for get db data
            ResultSet rs;
            rs=db.getData(quary);
            //cprying data to varibles
            while(rs.next()){
           String ImportingCountry=rs.getString("ImportingCountry");
           String DestinationCountry=rs.getString("DestinationCountry");
           String cost="$ "+rs.getString("Cost");
           
           
           
           
            
            //create table data 
            Object ob[]={ImportingCountry,DestinationCountry,cost};
            //add created table data to table model
            dt.addRow(ob);
        }
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }
    
    
    }
    
    public void close(){  
        WindowEvent winClosingEvent = new WindowEvent(this,WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(winClosingEvent);  
    }
    /**
     * @param args the command line arguments
     */
    public boolean chktableVal(String DCountry){
    
        boolean val=false;
        
        
        return val;
    
        
    }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageShippingCost.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageShippingCost.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageShippingCost.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageShippingCost.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManageShippingCost().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_Back;
    private javax.swing.JButton btn_del;
    private javax.swing.JComboBox cmboBox_DCountry;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton_back;
    private javax.swing.JButton jButton_home;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTable tbl_shippingcosts;
    private javax.swing.JTextField txt_SCost;
    // End of variables declaration//GEN-END:variables
}
